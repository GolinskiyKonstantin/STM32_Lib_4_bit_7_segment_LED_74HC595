/*	сохраняем данный файл в кодировке UTF-8		*/

	author: Golinskiy Konstantin	e-mail: golinskiy.konstantin@gmail.com

/*

	подключение производим не по шине SPI, а посредствам обычного ногодрыгания ( но можно и по шине SPI )
	
	для етого в CubeMX ставим 3 ножки в режиме выход и называем их ( желательно ) как указано ниже:
	
		VCC	 - 	3.3V
		SCLK - 	SCLK (SCK)	
		RCLK - 	RCLK  засчелка ( ставим пин на выход - и состояние HIGH )
				при	HIGH - блокировка микросхемы при LOW - можно отправлять данные
		DIO - 	DIO (MOSI)
		
	после записи в микросхему данных засчелку дергаем сперва в ниский уровень потом ставим обратно в высокий.

	отправляем 16 бит ( так как 2 микросхемы по 8 бит каждая )
	отправляем сперва 8 старших бита потом 8 младших ( так как при заполнении первой микрухи все данные с ние перейдут во вторую )
	в первом 8 бите сами эллементы цифры
	во втором хранится номер индикатора ( их у нас 4 )
	TGFEDCBA - первый байт разряд цифры
	хххх4321 - второй байт парядковый номер индикатора в 

	Данные отправляем в обратном порядке начиная со старшего бита.
	
	Сам индикатор имеет общий анод, поетому ниским уровнем включаем сегмент на цифре.
	
	//-----------------------------------------------------------------------------------------------------------------
	ВНИМАНИЕ!!! Индикация динамическая поэтому продумываем код так чтобы функции отображения чисел вызывались постоянно
	//-----------------------------------------------------------------------------------------------------------------
*/


Для настройки указываем нужные параметры в файле "FourDigit74HC595.h"

//###################  SETUP  ##################################################################
		
		// указываем порты ( если в CubeMX указали такие же названия то указывать не нужно )
		#if defined (SCLK_GPIO_Port)
		#else
			#define SCLK_GPIO_Port   	GPIOB
			#define SCLK_Pin			GPIO_PIN_14
		#endif
		
		#if defined (RCLK_GPIO_Port)
		#else
			#define RCLK_GPIO_Port   	GPIOB
			#define RCLK_Pin			GPIO_PIN_12
		#endif
		
		#if defined (DIO_GPIO_Port)
		#else
			#define DIO_GPIO_Port   	GPIOB
			#define DIO_Pin				GPIO_PIN_11
		#endif
		
//###############################################################################################



	#include "FourDigit74HC595.h"
	.........
	.........

main()=============================================================================================================================

	.........
	.........
	.........

while(1)===========================================================================================================================

////////////////////////////////////////////////////////////////////////////
	  
	  
//-------------------------------------------------------------------------
// формирует одно разрядное число ( 1 цифру )
// в указаном разряде ( можно совместно включить точку )
// ( параметры ):  1- позиция ( разряд ) где отабразить значение от 1 до 4
				// 2- сама цифра от 0 до 9 ( если нужен знак минус то ставим 10 )
				// 3- точка ( 1 включить,  0 выключить )
	  
//	FourDigit74HC595_sendOneDigit( 1, 5, 0 );
//	FourDigit74HC595_sendOneDigit( 2, 8, 0 );
//	FourDigit74HC595_sendOneDigit( 3, 3, 0 );
//	FourDigit74HC595_sendOneDigit( 4, 9, 0 );
//-------------------------------------------------------------------------
	  

//-------------------------------------------------------------------------	  
// функция для отображения любого числа на дисплее
// ( параметры ):	строка которую нужно отабразить :
			//		символы цифры от 0 до 9 
			//		знак минус ( может быть не один )
			//		знак точка ( может быть не один )
			//		Напримар: "-10.56" "0.56" "-2 -2.3" "1.2.3.4." "-23-" и т.д	  
//  FourDigit74HC595_sendNumber("-5.68");
//-------------------------------------------------------------------------

//-------------------------------------------------------------------------
// функция для отображения INT целочисленного числа на дисплее
// ( параметры ):	число целочисленное :
			//		цифры от -999 до 9999 
//	FourDigit74HC595_sendNumberInt( -12 );
//-------------------------------------------------------------------------


	  static int16_t num = -1010;
	  static uint32_t time_send = 0;
	  
//------------------------------	  
	  
	  if( HAL_GetTick() - time_send > 100 ){		  
			time_send = HAL_GetTick();		
			num++;	
	  }
	  
	  FourDigit74HC595_sendNumberInt( num );

//-----------------------------

//	  static char buff[9];
//	  
//	  if( HAL_GetTick() - time_send > 100 ){		  
//			time_send = HAL_GetTick();		
//			sprintf( buff,"%d", num++);	
//	  }
//	  
//	  FourDigit74HC595_sendNumber(buff);
	  
///////////////////////////////////////////////////////////////////////////
	.........
	.........
	.........
	.........

=== end while(1) ==================================================================================================================
=== end main() ====================================================================================================================
